<?php

namespace Drupal\entity_creation\Controller;

use Drupal\Core\Controller\ControllerBase;
use Drupal\Core\Database\Connection;
use Drupal\node\Entity\Node;
use Drupal\Core\Entity\EntityTypeManagerInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\HttpFoundation\JsonResponse;

/**
 * Returns responses for Entity creation routes.
 */
class EntityCreationController extends ControllerBase {

  // /**
  //  * The database connection.
  //  *
  //  * @var \Drupal\node\Entity\Node
  //  */
  // // protected $connection;
  // protected $nodeEntity;

  /**
   * The entity type manager.
   *
   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
   */
  // protected $entityTypeManager;

  /**
   * The controller constructor.
   *
   * @param \Drupal\node\Entity\Node $nodeEntity
   *   The database connection.
   */
  // public function __construct(EntityTypeManagerInterface $entityTypeManager) {
  //   $this->entityTypeManager = $entityTypeManager;
  // }

  /**
   * {@inheritdoc}
   */
  // public static function create(ContainerInterface $container) {
  //   return new static(
  //     $container->get('entityTypeManager')
  //   );
  // }

  /**
   * Builds the response
   * @param id
   */
  public function build() {

    // $nodeEntity->create([
    //   'type' => 'character',
    //   'title' => 'Testing Title',
    // ]);

    // $nodeEntity->save();

    // $node_storage = $this->entityTypeManager->getStorage('node');

    // $node_storage->create([
    //   'type' => 'article',
    //   'title' => 'Testing Title'
    // ]);

    // $node_storage->save();
    try{
      $node = Node::create([
        'type' => 'article',
        'title' => 'Druplicon test',
      ]);
      $node->save();
      $response = "true";
    } catch (Exception $e){
      $response = "false".$e->getMessage();
    }

    return new JsonResponse($response);
  }

}
